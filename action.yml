---
name: 'Configure CF CLI'

description: |
  Installs the latest linux64 binary for the CloudFoundry CLI as outlined in
  https://github.com/cloudfoundry/cli/blob/master/doc/installation-instructions/installation-instructions-v7.md#installers-and-compressed-binaries.
  The action then authenticates the CF CLI with a "cf auth" command using the
  cf-username and cf-password provided. Finally, targets one of the
  dev/test/prod spaces with a "cf target" command using the cf-org provided. The
  action assumes a CF API of "https://api.fr.cloud.gov" and that spaces are
  named "dev", "test", and "prod".

  Targets are determined as follows - Pushes to the main branch target dev, tags
  on the main branch target test, and releases will target prod.

  For users with multiple spaces per environment (e.g. dev-private, dev-public),
  a "space-suffix" can optionally be provided to append to dev|test|prod.

inputs:
  cf-username:
    description: 'CloudFoundry username to authenticate with'
    required: true

  cf-password:
    description: 'CloudFoundry password to authenticate with'
    required: true

  cf-org:
    description: 'CloudFoundry Organization to target'
    required: true

  space-suffix:
    description: >
      The suffix to append to the targeted space. If the targeted space is "dev"
      and the space-suffix is "-public" the resulting "dev-public" space will be
      targeted with the "cf target" command.
    required: false
    default: ""

outputs:
  target-environment:
    description: |
      The target environment based off the github ref. One of 'dev',
      'test', or 'prod'.
    value: ${{ steps.environment.outputs.environment_name }}
  target-environment-upper:
    description: |
      Identical to target-environment except the value is upper-cased. Useful
      for interacting with GitHub Secrets or any case-sensitive scenario where
      values need to be all upper-case. For example, using
      MY_SECRET_$target_environment_upper when accessing different github
      secrets for dev, test, and prod.
    value: ${{ steps.environment.outputs.environment_name_upper }}
  target-space:
    description: |
      The name of the space that was targeted by "cf target". When no suffix
      is provided, target-environment and target-space will be equal.
    value: ${{ steps.environment.outputs.target-space }}

runs:
  using: "composite"
  steps:
    - name: Add masks for inputs
      shell: bash
      id: input-validation
      run: |
        # Mask the sensitive cf values
        cf_username=${{ inputs.cf-username }}
        cf_password=${{ inputs.cf-password }}
        cf_org=${{ inputs.cf-org }}

        echo "::add-mask::$cf_username"
        echo "::add-mask::$cf_password"
        echo "::add-mask::$cf-org"

    - name: Install the CloudFoundry CLI
      shell: bash
      run: |
        # Download and extract the CLI
        curl --silent --show-error -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v8" | sudo tar -zx --directory=/usr/local/bin
        echo "Successfully installed $(cf --version)"

    - name: Authenticate to the CF API
      shell: bash
      run: |
        # Authenticate to the cloud.gov cli
        echo "::group::Authenticate to Cloud.gov CF api"

        cf api https://api.fr.cloud.gov
        cf auth ${{ inputs.cf-username }} ${{ inputs.cf-password }}

        echo "::endgroup::"
        echo "Successfully authenticated to Cloud.gov."

    - name: Target an environment
      id: environment
      shell: bash
      run: |
        # Determine the deployment target based on the github ref and set the
        # 'cf target' to the correct value.
        echo "::group::Target Environment"
        echo "Github Ref is: ${{ github.ref }}"
        echo "GitHub event name is: $GITHUB_EVENT_NAME"

        if [[ $GITHUB_REF == "refs/heads/main" ]]
        then
            # Pushes to main are deployed to dev
            environment_name=dev
        elif [[ $GITHUB_REF == "refs/heads/pre" ]]
        then
            # Pushes to pre are deployed to pre
            environment_name=pre
        elif [[ $GITHUB_REF =~ refs/tags/* ]]
        then
            if [[ "$GITHUB_EVENT_NAME" == "push" ]]
            then
                # Tags on main are deployed to test
                environment_name=test
            elif [[ "$GITHUB_EVENT_NAME" == "release" ]]
            then
                # Release events on tags are deployed to prod
                environment_name=prod
            fi
        else
            echo 'Unknown deployment target'
            exit 1
        fi

        space_suffix=${{ inputs.space-suffix }}
        target_space="$environment_name$space_suffix"

        # Set the outputs for this step
        env_name_upper=$(echo "$environment_name" | tr '[:lower:]' '[:upper:]')
        echo "ENVIRONMENT_NAME=$environment_name" >> $GITHUB_OUTPUT
        echo "ENVIRONMENT_NAME_UPPER=$env_name_upper" >> $GITHUB_OUTPUT
        echo "ENVIRONMENT_NAME set to: $environment_name"
        echo "ENVIRONMENT_NAME_UPPER set to: $environment_name_upper"

        echo "TARGET_SPACE=$target_space" >> $GITHUB_OUTPUT
        echo "TARGET_SPACE set to: $target_space"

        echo "Setting the CF CLI to target $target_space"
        cf target -o ${{ inputs.cf-org }} -s "$target_space"
        echo "::endgroup::"
        echo "Successfully targeted $target_space"
